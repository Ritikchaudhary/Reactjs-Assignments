Q1: What is NPM ?
ans: NPM is node package manager. NPM doesn't stands for "NODE PACKAGE MANAGER" but it works as a node package manager behind the scenes.
It basically manages the packages.
NPM is the largest standard repository for packages, all the packages are hosted on npm.

Q2: What is Parcel/webpack ? why do we need it ?
ans: parcel/ webpack are the bundlers. Bundlers are the most imp packages. The main work of bundlers is to bundles all the files together
to ship them to prodution. It basically Minimizes(Minification) the files in case of prduction ad compress all the code so that they can be pushed to production.

Bundlers packages our app so that it can be shipped to production.

parcel, webpack, vite etc. all are same it's just that the algorithm for bundling up the files is different.

Q3: what is .parcel-cache ?
ans: ".parcel-cache" is a directory generated by the Parcel bundler, serving as a cache for storing intermediate build results.
.parcel-cache helps in faster builds.

Q4: What is npx?
ans: Just like npm command which is used to install a npm package.
npx is used to execute the the npm package which is installed.

Q5: Difference b/w dependencies and devDependencies ?
ans: There are two types of dependencies:
- Dependency (normal)
- devDependency

dependency(normal) - used in production.
devDependency - required in the development process.

Q6: What is Treeshaking?
ans: Treeshaking is a term which is used to remove the used code or which used to remove the dead code. This is important for preparing code that is production ready.
In modern javascript applcation, it is carried out by bundlers.

Q7: What is Hot module Replacement ?
ans: HMR is basically when we are able to see the changes in real-time in our application. It reloads the page automatically.
HMR uses the "file watching algorithm" which is written in c++.

Q8: List some superpower of Parcel bundler.
ans:
- When we execute the parcel package it builds the "Development build" for our app.
- creates a local server and host our app on this local server.
- provides HMR(Hot module replacement).
- Image optimisation
- Minification - (remove the unneccesary code formatting and the comments to make it prodution ready).
- compress all the codes.
- caching - for faster builds(stores the immediate build results).
- Treeshaking
- differential bundling(to make our app supports older browser).

Q9: What is .gitignore ?
ans: .gitignore is a file which can intensionally ignores file by git. Or we can put file sin .gitignore which we don't want to put on github.
All the files which can be regenerated should not be put on github. Only essential files shoud be pushed to github.

Q10: What is the difference b/w package.json and package-lock.json ?
ans: Package.json is a configuration file for npm. It tracks all the dependencies which we are using in our project.

Package-lock.json is the file which keep a track of EXACT VERSION of dependencies we are using in our project.

Q11: What is node_modules ? Should we put that on git ?
ans: node_modules contains all the codes of our dependency that is fetched from npm. It is one of the heaviest file in the project.
node_modules acts as a database that contain all the data related to dependency.

No we should not put node_modules in git, becaue node_modules can be regenerated on server with the help of "package.json" and "package-lock.json" files.
(npm install)- by this command.

Q12: What 'dist' folder ?
ans: 'dist' folder is generated when we execute the parcel i.e when we build "development build". dist contains all the files which can be hosted on the server.
when parcel's local server host our app on it, then it is hosted from this 'dist' folder only. Also, when make our app production ready,
then also bundled(Minified and compressed code's files) are put in the 'dist' folder.

'dist' folder is in constant sync with .parcel-cache.

Q13: what si browerslist ?
ans: browserslist is a configuration file that determines which browsers your project should support.
